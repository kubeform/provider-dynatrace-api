apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: dynatrace.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: anomalies.disk.dynatrace.kubeform.com
spec:
  group: disk.dynatrace.kubeform.com
  names:
    kind: Anomalies
    listKind: AnomaliesList
    plural: anomalies
    singular: anomalies
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  diskName:
                    description: Narrows the rule usage down to disks, matching the
                      specified criteria
                    properties:
                      operator:
                        description: 'Possible values are: `CONTAINS`, `DOES_NOT_CONTAIN`,
                          `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS` and `STARTS_WITH`'
                        type: string
                      value:
                        description: Value to compare to
                        type: string
                    required:
                    - operator
                    - value
                    type: object
                  enabled:
                    description: Disk event rule enabled/disabled
                    type: boolean
                  hostGroupID:
                    description: Narrows the rule usage down to disks that run on
                      hosts that themselves run on the specified host group
                    type: string
                  id:
                    type: string
                  metric:
                    description: 'The metric to monitor. Possible values are: `LOW_DISK_SPACE`,
                      `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`'
                    type: string
                  name:
                    description: The name of the disk event rule
                    type: string
                  samples:
                    description: The number of samples to evaluate
                    format: int64
                    type: integer
                  tags:
                    description: Narrows the rule usage down to the hosts matching
                      the specified tags
                    properties:
                      filter:
                        description: A Tag Filter
                        items:
                          properties:
                            context:
                              description: The origin of the tag, such as AWS or Cloud
                                Foundry. Custom tags use the `CONTEXTLESS` value
                              type: string
                            key:
                              description: The key of the tag. Custom tags have the
                                tag value here
                              type: string
                            value:
                              description: The value of the tag. Not applicable to
                                custom tags
                              type: string
                          required:
                          - context
                          - key
                          type: object
                        type: array
                    type: object
                  threshold:
                    description: The threshold to trigger disk event.   * A percentage
                      for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds
                      for `ReadTimeExceeding` or `WriteTimeExceeding` metrics
                    format: double
                    type: number
                  violatingSamples:
                    description: The number of samples that must violate the threshold
                      to trigger an event. Must not exceed the number of evaluated
                      samples
                    format: int64
                    type: integer
                required:
                - enabled
                - metric
                - name
                - samples
                - threshold
                - violatingSamples
                type: object
              state:
                properties:
                  diskName:
                    description: Narrows the rule usage down to disks, matching the
                      specified criteria
                    properties:
                      operator:
                        description: 'Possible values are: `CONTAINS`, `DOES_NOT_CONTAIN`,
                          `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS` and `STARTS_WITH`'
                        type: string
                      value:
                        description: Value to compare to
                        type: string
                    required:
                    - operator
                    - value
                    type: object
                  enabled:
                    description: Disk event rule enabled/disabled
                    type: boolean
                  hostGroupID:
                    description: Narrows the rule usage down to disks that run on
                      hosts that themselves run on the specified host group
                    type: string
                  id:
                    type: string
                  metric:
                    description: 'The metric to monitor. Possible values are: `LOW_DISK_SPACE`,
                      `LOW_INODES`, `READ_TIME_EXCEEDING` and `WRITE_TIME_EXCEEDING`'
                    type: string
                  name:
                    description: The name of the disk event rule
                    type: string
                  samples:
                    description: The number of samples to evaluate
                    format: int64
                    type: integer
                  tags:
                    description: Narrows the rule usage down to the hosts matching
                      the specified tags
                    properties:
                      filter:
                        description: A Tag Filter
                        items:
                          properties:
                            context:
                              description: The origin of the tag, such as AWS or Cloud
                                Foundry. Custom tags use the `CONTEXTLESS` value
                              type: string
                            key:
                              description: The key of the tag. Custom tags have the
                                tag value here
                              type: string
                            value:
                              description: The value of the tag. Not applicable to
                                custom tags
                              type: string
                          required:
                          - context
                          - key
                          type: object
                        type: array
                    type: object
                  threshold:
                    description: The threshold to trigger disk event.   * A percentage
                      for `LowDiskSpace` or `LowInodes` metrics.   * In milliseconds
                      for `ReadTimeExceeding` or `WriteTimeExceeding` metrics
                    format: double
                    type: number
                  violatingSamples:
                    description: The number of samples that must violate the threshold
                      to trigger an event. Must not exceed the number of evaluated
                      samples
                    format: int64
                    type: integer
                required:
                - enabled
                - metric
                - name
                - samples
                - threshold
                - violatingSamples
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
