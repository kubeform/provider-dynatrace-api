apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: dynatrace.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: servicemetrics.calculated.dynatrace.kubeform.com
spec:
  group: calculated.dynatrace.kubeform.com
  names:
    kind: ServiceMetric
    listKind: ServiceMetricList
    plural: servicemetrics
    singular: servicemetric
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  conditions:
                    description: The set of conditions for the metric usage. **All**
                      the specified conditions must be fulfilled to use the metric
                    items:
                      properties:
                        condition:
                          description: A conditions for the metric usage
                          items:
                            properties:
                              attribute:
                                description: The attribute to be matched.  Note that
                                  for a service property attribute you must use the
                                  comparison of the `FAST_STRING` type. Possible values
                                  are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`,
                                  `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`,
                                  `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`,
                                  `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`,
                                  `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`,
                                  `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`,
                                  `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`,
                                  `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`,
                                  `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`,
                                  `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`,
                                  `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`,
                                  `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`,
                                  `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`,
                                  `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`,
                                  `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`,
                                  `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`,
                                  `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`,
                                  `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`,
                                  `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`,
                                  `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`,
                                  `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`,
                                  `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`,
                                  `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`,
                                  `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`,
                                  `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`,
                                  `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`,
                                  `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`,
                                  `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`,
                                  `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`,
                                  `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`,
                                  `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`,
                                  `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
                                type: string
                              comparison:
                                description: Type-specific comparison for attributes
                                properties:
                                  boolean:
                                    description: Boolean Comparison for `BOOLEAN`
                                      attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: boolean
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: boolean
                                        minItems: 1
                                        type: array
                                    type: object
                                  esbInputNodeType:
                                    description: Type-specific comparison information
                                      for attributes of type 'ESB_INPUT_NODE_TYPE'
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  failedState:
                                    description: Comparison for `FAILED_STATE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `FAILED` and `FAILED`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `FAILED` and `FAILED`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  failureReason:
                                    description: Comparison for `FAILURE_REASON` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`,
                                          `HTTP_CODE` and `REQUEST_ATTRIBUTE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`,
                                          `HTTP_CODE` and `REQUEST_ATTRIBUTE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  fastString:
                                    description: Comparison for `FAST_STRING` attributes.
                                      Use it for all service property attributes
                                    properties:
                                      caseSensitive:
                                        description: The comparison is case-sensitive
                                          (`true`) or not case-sensitive (`false`)
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `CONTAINS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: string
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  flawState:
                                    description: Comparison for `FLAW_STATE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `FLAWED` and `NOT_FLAWED`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `FLAWED` and `NOT_FLAWED`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  generic:
                                    description: Comparison for `NUMBER` attributes
                                    properties:
                                      type:
                                        description: Defines the actual set of fields
                                          depending on the value
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  httpMethod:
                                    description: Comparison for `HTTP_METHOD` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CONNECT`, `DELETE`, `GET`, `HEAD`,
                                          `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CONNECT`, `DELETE`, `GET`, `HEAD`,
                                          `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  httpStatusClass:
                                    description: Comparison for `HTTP_STATUS_CLASS`
                                      attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`,
                                          `C_5XX` and `NO_RESPONSE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`,
                                          `C_5XX` and `NO_RESPONSE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  iibInputNodeType:
                                    description: Comparison for `IIB_INPUT_NODE_TYPE`
                                      attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  negate:
                                    description: Reverse the comparison **operator**.
                                      For example, it turns **equals** into **does
                                      not equal**
                                    type: boolean
                                  number:
                                    description: Comparison for `NUMBER` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`,
                                          `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`,
                                          `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        format: double
                                        type: number
                                      values:
                                        description: The values to compare to
                                        items:
                                          format: double
                                          type: number
                                        minItems: 1
                                        type: array
                                    type: object
                                  numberRequestAttribute:
                                    description: Comparison for `NUMBER_REQUEST_ATTRIBUTE`
                                      attributes
                                    properties:
                                      matchOnChildCalls:
                                        description: If `true`, the request attribute
                                          is matched on child service calls. Default
                                          is `false`
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`,
                                          `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`,
                                          `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
                                        type: string
                                      requestAttribute:
                                        description: No documentation available for
                                          this attribute
                                        type: string
                                      source:
                                        description: Defines valid sources of request
                                          attributes for conditions or placeholders
                                        properties:
                                          managementZone:
                                            description: Use only request attributes
                                              from services that belong to this management
                                              zone.. Use either this or `serviceTag`
                                            type: string
                                          serviceTag:
                                            description: Use only request attributes
                                              from services that have this tag. Use
                                              either this or `managementZone`
                                            properties:
                                              context:
                                                description: The origin of the tag,
                                                  such as AWS or Cloud Foundry. For
                                                  custom tags use the `CONTEXTLESS`
                                                  value. The context is set for tags
                                                  that are automatically imported
                                                  by OneAgent (for example, from the
                                                  AWS console or environment variables).
                                                  It’s useful for determining the
                                                  origin of tags when not manually
                                                  defined, and it also helps to prevent
                                                  clashes with other existing tags.
                                                  If the tag is not automatically
                                                  imported, `CONTEXTLESS` set. Possible
                                                  values are `AWS`, `AWS_GENERIC`,
                                                  `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`,
                                                  `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE`
                                                  and `KUBERNETES`
                                                type: string
                                              key:
                                                description: The key of the tag. For
                                                  custom tags, put the tag value here.
                                                  The key allows categorization of
                                                  multiple tags. It is possible that
                                                  there are multiple values for a
                                                  single key which will all be represented
                                                  as standalone tags. Therefore, the
                                                  key does not have the semantic of
                                                  a map key but is more like a key
                                                  of a key-value tuple. In some cases,
                                                  for example custom tags, the key
                                                  represents the actual tag value
                                                  and the value field is not set –
                                                  those are called valueless tags
                                                type: string
                                              tagKey:
                                                description: has no documentation
                                                properties:
                                                  context:
                                                    description: has no documentation
                                                    type: string
                                                  key:
                                                    description: has no documentation
                                                    type: string
                                                type: object
                                              value:
                                                description: The value of the tag.
                                                  Not applicable to custom tags. If
                                                  a tag does have a separate key and
                                                  value (in the textual representation
                                                  they are split by the colon ‘:’),
                                                  this field is set with the actual
                                                  value. Key-value pairs can occur
                                                  for automatically imported tags
                                                  and tags set by rules if extractors
                                                  are used
                                                type: string
                                            required:
                                            - key
                                            type: object
                                          unknowns:
                                            description: allows for configuring properties
                                              that are not explicitly supported by
                                              the current version of this provider
                                            type: string
                                        type: object
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        format: double
                                        type: number
                                      values:
                                        description: The values to compare to
                                        items:
                                          format: double
                                          type: number
                                        minItems: 1
                                        type: array
                                    required:
                                    - requestAttribute
                                    type: object
                                  serviceType:
                                    description: Comparison for `SERVICE_TYPE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`,
                                          `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`,
                                          `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`,
                                          `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`,
                                          `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and
                                          `WEB_SERVICE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`,
                                          `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`,
                                          `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`,
                                          `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`,
                                          `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and
                                          `WEB_SERVICE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  string:
                                    description: Comparison for `STRING` attributes
                                    properties:
                                      caseSensitive:
                                        description: The comparison is case-sensitive
                                          (`true`) or not case-sensitive (`false`)
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`,
                                          `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`,
                                          `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and
                                          `REGEX_MATCHES`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: string
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  stringRequestAttribute:
                                    description: Comparison for `STRING_REQUEST_ATTRIBUTE`
                                      attributes
                                    properties:
                                      caseSensitive:
                                        description: The comparison is case-sensitive
                                          (`true`) or not case-sensitive (`false`)
                                        type: boolean
                                      matchOnChildCalls:
                                        description: If `true`, the request attribute
                                          is matched on child service calls. Default
                                          is `false`
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`,
                                          `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`,
                                          `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and
                                          `REGEX_MATCHES`
                                        type: string
                                      requestAttribute:
                                        description: No documentation available for
                                          this attribute
                                        type: string
                                      source:
                                        description: Defines valid sources of request
                                          attributes for conditions or placeholders
                                        properties:
                                          managementZone:
                                            description: Use only request attributes
                                              from services that belong to this management
                                              zone.. Use either this or `serviceTag`
                                            type: string
                                          serviceTag:
                                            description: Use only request attributes
                                              from services that have this tag. Use
                                              either this or `managementZone`
                                            properties:
                                              context:
                                                description: The origin of the tag,
                                                  such as AWS or Cloud Foundry. For
                                                  custom tags use the `CONTEXTLESS`
                                                  value. The context is set for tags
                                                  that are automatically imported
                                                  by OneAgent (for example, from the
                                                  AWS console or environment variables).
                                                  It’s useful for determining the
                                                  origin of tags when not manually
                                                  defined, and it also helps to prevent
                                                  clashes with other existing tags.
                                                  If the tag is not automatically
                                                  imported, `CONTEXTLESS` set. Possible
                                                  values are `AWS`, `AWS_GENERIC`,
                                                  `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`,
                                                  `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE`
                                                  and `KUBERNETES`
                                                type: string
                                              key:
                                                description: The key of the tag. For
                                                  custom tags, put the tag value here.
                                                  The key allows categorization of
                                                  multiple tags. It is possible that
                                                  there are multiple values for a
                                                  single key which will all be represented
                                                  as standalone tags. Therefore, the
                                                  key does not have the semantic of
                                                  a map key but is more like a key
                                                  of a key-value tuple. In some cases,
                                                  for example custom tags, the key
                                                  represents the actual tag value
                                                  and the value field is not set –
                                                  those are called valueless tags
                                                type: string
                                              tagKey:
                                                description: has no documentation
                                                properties:
                                                  context:
                                                    description: has no documentation
                                                    type: string
                                                  key:
                                                    description: has no documentation
                                                    type: string
                                                type: object
                                              value:
                                                description: The value of the tag.
                                                  Not applicable to custom tags. If
                                                  a tag does have a separate key and
                                                  value (in the textual representation
                                                  they are split by the colon ‘:’),
                                                  this field is set with the actual
                                                  value. Key-value pairs can occur
                                                  for automatically imported tags
                                                  and tags set by rules if extractors
                                                  are used
                                                type: string
                                            required:
                                            - key
                                            type: object
                                          unknowns:
                                            description: allows for configuring properties
                                              that are not explicitly supported by
                                              the current version of this provider
                                            type: string
                                        type: object
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: string
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    required:
                                    - requestAttribute
                                    type: object
                                  tag:
                                    description: Comparison for `TAG` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`,
                                          `TAG_KEY_EQUALS` and `TAG_KEY_EQUALS_ANY_OF`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The values to compare to
                                        properties:
                                          context:
                                            description: The origin of the tag, such
                                              as AWS or Cloud Foundry. Custom tags
                                              use the `CONTEXTLESS` value. Possible
                                              values are `AWS`, `AWS_GENERIC`, `AZURE`,
                                              `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`,
                                              `GOOGLE_CLOUD` and `KUBERNETES`
                                            type: string
                                          key:
                                            description: The key of the tag. Custom
                                              tags have the tag value here
                                            type: string
                                          unknowns:
                                            description: allows for configuring properties
                                              that are not explicitly supported by
                                              the current version of this provider
                                            type: string
                                          value:
                                            description: The value of the tag. Not
                                              applicable to custom tags
                                            type: string
                                        required:
                                        - context
                                        - key
                                        type: object
                                      values:
                                        description: The values to compare to
                                        properties:
                                          value:
                                            description: The values to compare to
                                            items:
                                              properties:
                                                context:
                                                  description: The origin of the tag,
                                                    such as AWS or Cloud Foundry.
                                                    Custom tags use the `CONTEXTLESS`
                                                    value. Possible values are `AWS`,
                                                    `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`,
                                                    `CONTEXTLESS`, `ENVIRONMENT`,
                                                    `GOOGLE_CLOUD` and `KUBERNETES`
                                                  type: string
                                                key:
                                                  description: The key of the tag.
                                                    Custom tags have the tag value
                                                    here
                                                  type: string
                                                unknowns:
                                                  description: allows for configuring
                                                    properties that are not explicitly
                                                    supported by the current version
                                                    of this provider
                                                  type: string
                                                value:
                                                  description: The value of the tag.
                                                    Not applicable to custom tags
                                                  type: string
                                              required:
                                              - context
                                              - key
                                              type: object
                                            minItems: 1
                                            type: array
                                        type: object
                                    type: object
                                  zosCallType:
                                    description: Comparison for `ZOS_CALL_TYPE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CTG`, `DPL`, `EXPLICIT_ADK`,
                                          `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`,
                                          `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`,
                                          `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`,
                                          `TX` and `UNKNOWN`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CTG`, `DPL`, `EXPLICIT_ADK`,
                                          `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`,
                                          `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`,
                                          `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`,
                                          `TX` and `UNKNOWN`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                type: object
                            required:
                            - attribute
                            - comparison
                            type: object
                          minItems: 1
                          type: array
                      type: object
                    minItems: 1
                    type: array
                  dimensionDefinition:
                    description: Parameters of a definition of a calculated service
                      metric
                    properties:
                      dimension:
                        description: The dimension value pattern. You can define custom
                          placeholders in the `placeholders` field and use them here
                        type: string
                      name:
                        description: The name of the dimension
                        type: string
                      placeholders:
                        description: The list of custom placeholders to be used in
                          a dimension value pattern
                        properties:
                          placeholder:
                            description: A custom placeholder to be used in a dimension
                              value pattern
                            items:
                              properties:
                                aggregation:
                                  description: Which value of the request attribute
                                    must be used when it occurs across multiple child
                                    requests. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE`
                                    attribute, when **useFromChildCalls** is `true`.
                                    For the `COUNT` aggregation, the **kind** field
                                    is not applicable. Possible values are `COUNT`,
                                    `FIRST` and `LAST`.
                                  type: string
                                attribute:
                                  description: The attribute to extract from. You
                                    can only use attributes of the **string** type.
                                    Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`,
                                    `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`,
                                    `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`,
                                    `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`,
                                    `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`,
                                    `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`,
                                    `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`,
                                    `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`,
                                    `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`,
                                    `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`,
                                    `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`,
                                    `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`,
                                    `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`,
                                    `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`,
                                    `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`,
                                    `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`,
                                    `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`,
                                    `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`,
                                    `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`,
                                    `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`,
                                    `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`,
                                    `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`,
                                    `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`,
                                    `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`,
                                    `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`,
                                    `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`,
                                    `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`,
                                    `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`,
                                    `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`,
                                    `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`,
                                    `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`,
                                    `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`,
                                    `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`,
                                    `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and
                                    `ZOS_CALL_TYPE`
                                  type: string
                                delimiterOrRegex:
                                  description: "Depending on the `kind` value: \n
                                    * `REGEX_EXTRACTION`: The regular expression.
                                    \n * `BETWEEN_DELIMITER`: The opening delimiter
                                    string to look for. \n * All other values: The
                                    delimiter string to look for"
                                  type: string
                                endDelimiter:
                                  description: The closing delimiter string to look
                                    for. Required if the `kind` value is `BETWEEN_DELIMITER`.
                                    Not applicable otherwise
                                  type: string
                                kind:
                                  description: "The type of extraction. Defines either
                                    usage of regular expression (`regex`) or the position
                                    of request attribute value to be extracted. When
                                    the `attribute` is `SERVICE_REQUEST_ATTRIBUTE`
                                    attribute and `aggregation` is `COUNT`, needs
                                    to be set to `ORIGINAL_TEXT`. Possible values
                                    are \t`AFTER_DELIMITER`, `BEFORE_DELIMITER`, `BETWEEN_DELIMITER`,
                                    `ORIGINAL_TEXT` and `REGEX_EXTRACTION`"
                                  type: string
                                name:
                                  description: The name of the placeholder. Use it
                                    in the naming pattern as `{name}`
                                  type: string
                                normalization:
                                  description: The format of the extracted string.
                                    Possible values are `ORIGINAL`, `TO_LOWER_CASE`
                                    and `TO_UPPER_CASE`
                                  type: string
                                requestAttribute:
                                  description: The request attribute to extract from.
                                    Required if the `kind` value is `SERVICE_REQUEST_ATTRIBUTE`.
                                    Not applicable otherwise
                                  type: string
                                source:
                                  description: Defines valid sources of request attributes
                                    for conditions or placeholders
                                  properties:
                                    managementZone:
                                      description: Use only request attributes from
                                        services that belong to this management zone..
                                        Use either this or `serviceTag`
                                      type: string
                                    serviceTag:
                                      description: Use only request attributes from
                                        services that have this tag. Use either this
                                        or `managementZone`
                                      properties:
                                        context:
                                          description: The origin of the tag, such
                                            as AWS or Cloud Foundry. For custom tags
                                            use the `CONTEXTLESS` value. The context
                                            is set for tags that are automatically
                                            imported by OneAgent (for example, from
                                            the AWS console or environment variables).
                                            It’s useful for determining the origin
                                            of tags when not manually defined, and
                                            it also helps to prevent clashes with
                                            other existing tags. If the tag is not
                                            automatically imported, `CONTEXTLESS`
                                            set. Possible values are `AWS`, `AWS_GENERIC`,
                                            `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`,
                                            `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE`
                                            and `KUBERNETES`
                                          type: string
                                        key:
                                          description: The key of the tag. For custom
                                            tags, put the tag value here. The key
                                            allows categorization of multiple tags.
                                            It is possible that there are multiple
                                            values for a single key which will all
                                            be represented as standalone tags. Therefore,
                                            the key does not have the semantic of
                                            a map key but is more like a key of a
                                            key-value tuple. In some cases, for example
                                            custom tags, the key represents the actual
                                            tag value and the value field is not set
                                            – those are called valueless tags
                                          type: string
                                        tagKey:
                                          description: has no documentation
                                          properties:
                                            context:
                                              description: has no documentation
                                              type: string
                                            key:
                                              description: has no documentation
                                              type: string
                                          type: object
                                        value:
                                          description: The value of the tag. Not applicable
                                            to custom tags. If a tag does have a separate
                                            key and value (in the textual representation
                                            they are split by the colon ‘:’), this
                                            field is set with the actual value. Key-value
                                            pairs can occur for automatically imported
                                            tags and tags set by rules if extractors
                                            are used
                                          type: string
                                      required:
                                      - key
                                      type: object
                                    unknowns:
                                      description: allows for configuring properties
                                        that are not explicitly supported by the current
                                        version of this provider
                                      type: string
                                  type: object
                                unknowns:
                                  description: allows for configuring properties that
                                    are not explicitly supported by the current version
                                    of this provider
                                  type: string
                                useFromChildCalls:
                                  description: If `true` request attribute will be
                                    taken from a child service call. Only applicable
                                    for the `SERVICE_REQUEST_ATTRIBUTE` attribute.
                                    Defaults to `false`
                                  type: boolean
                              required:
                              - attribute
                              - kind
                              - name
                              type: object
                            minItems: 1
                            type: array
                        type: object
                      topX:
                        description: The number of top values to be calculated
                        format: int64
                        type: integer
                      topXAggregation:
                        description: The aggregation of the dimension. Possible values
                          are `AVERAGE`, `COUNT`, `MAX`, `MIN`, `OF_INTEREST_RATIO`,
                          `OTHER_RATIO`, `SINGLE_VALUE` and `SUM`
                        type: string
                      topXDirection:
                        description: How to calculate the **topX** values. Possible
                          values are `ASCENDING` and `DESCENDING`
                        type: string
                      unknowns:
                        description: allows for configuring properties that are not
                          explicitly supported by the current version of this provider
                        type: string
                    required:
                    - dimension
                    - name
                    - topX
                    - topXAggregation
                    - topXDirection
                    type: object
                  enabled:
                    description: The metric is enabled (`true`) or disabled (`false`)
                    type: boolean
                  entityID:
                    description: Restricts the metric usage to the specified service.
                      This field is mutually exclusive with the `management_zones`
                      field
                    type: string
                  id:
                    type: string
                  managementZones:
                    description: Restricts the metric usage to specified management
                      zones. This field is mutually exclusive with the `entity_id`
                      field
                    items:
                      type: string
                    type: array
                  metricDefinition:
                    description: The definition of a calculated service metric
                    properties:
                      metric:
                        description: The metric to be captured. Possible values are
                          `CPU_TIME`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`,
                          `DISK_IO_TIME`, `EXCEPTION_COUNT`, `FAILED_REQUEST_COUNT`,
                          `FAILED_REQUEST_COUNT_CLIENT`, `FAILURE_RATE`, `FAILURE_RATE_CLIENT`,
                          `HTTP_4XX_ERROR_COUNT`, `HTTP_4XX_ERROR_COUNT_CLIENT`, `HTTP_5XX_ERROR_COUNT`,
                          `HTTP_5XX_ERROR_COUNT_CLIENT`, `IO_TIME`, `LOCK_TIME`, `NETWORK_IO_TIME`,
                          `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`,
                          `PROCESSING_TIME`, `REQUEST_ATTRIBUTE`, `REQUEST_COUNT`,
                          `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `SUCCESSFUL_REQUEST_COUNT`,
                          `SUCCESSFUL_REQUEST_COUNT_CLIENT` and `WAIT_TIME`
                        type: string
                      requestAttribute:
                        description: The request attribute to be captured. Only applicable
                          when the **metric** parameter is set to `REQUEST_ATTRIBUTE`
                        type: string
                    required:
                    - metric
                    type: object
                  metricKey:
                    description: The key of the calculated service metric
                    type: string
                  name:
                    description: The displayed name of the metric
                    type: string
                  unit:
                    description: The unit of the metric. Possible values are `BIT`,
                      `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,
                      `BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`,
                      `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`, `GIGA`, `GIGA_BYTE`,
                      `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`,
                      `KIBI_BYTE_PER_SECOND`, `KILO`, `KILO_BYTE`, `KILO_BYTE_PER_HOUR`,
                      `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`,
                      `MEBI_BYTE_PER_HOUR`, `MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`,
                      `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,
                      `MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`,
                      `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`, `MSU`, `NANO_SECOND`,
                      `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`,
                      `PER_MINUTE`, `PER_SECOND`, `PIXEL`, `PROMILLE`, `RATIO`, `SECOND`,
                      `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`
                    type: string
                  unitDisplayName:
                    description: The display name of the metric's unit. Only applicable
                      when the **unit** parameter is set to `UNSPECIFIED`
                    type: string
                  unknowns:
                    description: allows for configuring properties that are not explicitly
                      supported by the current version of this provider
                    type: string
                required:
                - metricKey
                - name
                - unit
                type: object
              state:
                properties:
                  conditions:
                    description: The set of conditions for the metric usage. **All**
                      the specified conditions must be fulfilled to use the metric
                    items:
                      properties:
                        condition:
                          description: A conditions for the metric usage
                          items:
                            properties:
                              attribute:
                                description: The attribute to be matched.  Note that
                                  for a service property attribute you must use the
                                  comparison of the `FAST_STRING` type. Possible values
                                  are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`,
                                  `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`,
                                  `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`,
                                  `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`,
                                  `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`,
                                  `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`,
                                  `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`,
                                  `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`,
                                  `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`,
                                  `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`,
                                  `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`,
                                  `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`,
                                  `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`,
                                  `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`,
                                  `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`,
                                  `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`,
                                  `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`,
                                  `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`,
                                  `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`,
                                  `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`,
                                  `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`,
                                  `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`,
                                  `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`,
                                  `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`,
                                  `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`,
                                  `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`,
                                  `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`,
                                  `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`,
                                  `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`,
                                  `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`,
                                  `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`,
                                  `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
                                type: string
                              comparison:
                                description: Type-specific comparison for attributes
                                properties:
                                  boolean:
                                    description: Boolean Comparison for `BOOLEAN`
                                      attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: boolean
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: boolean
                                        minItems: 1
                                        type: array
                                    type: object
                                  esbInputNodeType:
                                    description: Type-specific comparison information
                                      for attributes of type 'ESB_INPUT_NODE_TYPE'
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  failedState:
                                    description: Comparison for `FAILED_STATE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `FAILED` and `FAILED`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `FAILED` and `FAILED`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  failureReason:
                                    description: Comparison for `FAILURE_REASON` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`,
                                          `HTTP_CODE` and `REQUEST_ATTRIBUTE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`,
                                          `HTTP_CODE` and `REQUEST_ATTRIBUTE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  fastString:
                                    description: Comparison for `FAST_STRING` attributes.
                                      Use it for all service property attributes
                                    properties:
                                      caseSensitive:
                                        description: The comparison is case-sensitive
                                          (`true`) or not case-sensitive (`false`)
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `CONTAINS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: string
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  flawState:
                                    description: Comparison for `FLAW_STATE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `FLAWED` and `NOT_FLAWED`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `FLAWED` and `NOT_FLAWED`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  generic:
                                    description: Comparison for `NUMBER` attributes
                                    properties:
                                      type:
                                        description: Defines the actual set of fields
                                          depending on the value
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  httpMethod:
                                    description: Comparison for `HTTP_METHOD` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CONNECT`, `DELETE`, `GET`, `HEAD`,
                                          `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CONNECT`, `DELETE`, `GET`, `HEAD`,
                                          `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  httpStatusClass:
                                    description: Comparison for `HTTP_STATUS_CLASS`
                                      attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`,
                                          `C_5XX` and `NO_RESPONSE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`,
                                          `C_5XX` and `NO_RESPONSE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  iibInputNodeType:
                                    description: Comparison for `IIB_INPUT_NODE_TYPE`
                                      attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`,
                                          `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`,
                                          `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`,
                                          `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`,
                                          `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`,
                                          `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`,
                                          `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`,
                                          `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`,
                                          `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`,
                                          `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`,
                                          `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`,
                                          `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`,
                                          `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  negate:
                                    description: Reverse the comparison **operator**.
                                      For example, it turns **equals** into **does
                                      not equal**
                                    type: boolean
                                  number:
                                    description: Comparison for `NUMBER` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`,
                                          `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`,
                                          `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        format: double
                                        type: number
                                      values:
                                        description: The values to compare to
                                        items:
                                          format: double
                                          type: number
                                        minItems: 1
                                        type: array
                                    type: object
                                  numberRequestAttribute:
                                    description: Comparison for `NUMBER_REQUEST_ATTRIBUTE`
                                      attributes
                                    properties:
                                      matchOnChildCalls:
                                        description: If `true`, the request attribute
                                          is matched on child service calls. Default
                                          is `false`
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`,
                                          `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`,
                                          `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
                                        type: string
                                      requestAttribute:
                                        description: No documentation available for
                                          this attribute
                                        type: string
                                      source:
                                        description: Defines valid sources of request
                                          attributes for conditions or placeholders
                                        properties:
                                          managementZone:
                                            description: Use only request attributes
                                              from services that belong to this management
                                              zone.. Use either this or `serviceTag`
                                            type: string
                                          serviceTag:
                                            description: Use only request attributes
                                              from services that have this tag. Use
                                              either this or `managementZone`
                                            properties:
                                              context:
                                                description: The origin of the tag,
                                                  such as AWS or Cloud Foundry. For
                                                  custom tags use the `CONTEXTLESS`
                                                  value. The context is set for tags
                                                  that are automatically imported
                                                  by OneAgent (for example, from the
                                                  AWS console or environment variables).
                                                  It’s useful for determining the
                                                  origin of tags when not manually
                                                  defined, and it also helps to prevent
                                                  clashes with other existing tags.
                                                  If the tag is not automatically
                                                  imported, `CONTEXTLESS` set. Possible
                                                  values are `AWS`, `AWS_GENERIC`,
                                                  `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`,
                                                  `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE`
                                                  and `KUBERNETES`
                                                type: string
                                              key:
                                                description: The key of the tag. For
                                                  custom tags, put the tag value here.
                                                  The key allows categorization of
                                                  multiple tags. It is possible that
                                                  there are multiple values for a
                                                  single key which will all be represented
                                                  as standalone tags. Therefore, the
                                                  key does not have the semantic of
                                                  a map key but is more like a key
                                                  of a key-value tuple. In some cases,
                                                  for example custom tags, the key
                                                  represents the actual tag value
                                                  and the value field is not set –
                                                  those are called valueless tags
                                                type: string
                                              tagKey:
                                                description: has no documentation
                                                properties:
                                                  context:
                                                    description: has no documentation
                                                    type: string
                                                  key:
                                                    description: has no documentation
                                                    type: string
                                                type: object
                                              value:
                                                description: The value of the tag.
                                                  Not applicable to custom tags. If
                                                  a tag does have a separate key and
                                                  value (in the textual representation
                                                  they are split by the colon ‘:’),
                                                  this field is set with the actual
                                                  value. Key-value pairs can occur
                                                  for automatically imported tags
                                                  and tags set by rules if extractors
                                                  are used
                                                type: string
                                            required:
                                            - key
                                            type: object
                                          unknowns:
                                            description: allows for configuring properties
                                              that are not explicitly supported by
                                              the current version of this provider
                                            type: string
                                        type: object
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        format: double
                                        type: number
                                      values:
                                        description: The values to compare to
                                        items:
                                          format: double
                                          type: number
                                        minItems: 1
                                        type: array
                                    required:
                                    - requestAttribute
                                    type: object
                                  serviceType:
                                    description: Comparison for `SERVICE_TYPE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`,
                                          `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`,
                                          `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`,
                                          `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`,
                                          `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and
                                          `WEB_SERVICE`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`,
                                          `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`,
                                          `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`,
                                          `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`,
                                          `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and
                                          `WEB_SERVICE`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  string:
                                    description: Comparison for `STRING` attributes
                                    properties:
                                      caseSensitive:
                                        description: The comparison is case-sensitive
                                          (`true`) or not case-sensitive (`false`)
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`,
                                          `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`,
                                          `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and
                                          `REGEX_MATCHES`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: string
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                  stringRequestAttribute:
                                    description: Comparison for `STRING_REQUEST_ATTRIBUTE`
                                      attributes
                                    properties:
                                      caseSensitive:
                                        description: The comparison is case-sensitive
                                          (`true`) or not case-sensitive (`false`)
                                        type: boolean
                                      matchOnChildCalls:
                                        description: If `true`, the request attribute
                                          is matched on child service calls. Default
                                          is `false`
                                        type: boolean
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`,
                                          `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`,
                                          `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and
                                          `REGEX_MATCHES`
                                        type: string
                                      requestAttribute:
                                        description: No documentation available for
                                          this attribute
                                        type: string
                                      source:
                                        description: Defines valid sources of request
                                          attributes for conditions or placeholders
                                        properties:
                                          managementZone:
                                            description: Use only request attributes
                                              from services that belong to this management
                                              zone.. Use either this or `serviceTag`
                                            type: string
                                          serviceTag:
                                            description: Use only request attributes
                                              from services that have this tag. Use
                                              either this or `managementZone`
                                            properties:
                                              context:
                                                description: The origin of the tag,
                                                  such as AWS or Cloud Foundry. For
                                                  custom tags use the `CONTEXTLESS`
                                                  value. The context is set for tags
                                                  that are automatically imported
                                                  by OneAgent (for example, from the
                                                  AWS console or environment variables).
                                                  It’s useful for determining the
                                                  origin of tags when not manually
                                                  defined, and it also helps to prevent
                                                  clashes with other existing tags.
                                                  If the tag is not automatically
                                                  imported, `CONTEXTLESS` set. Possible
                                                  values are `AWS`, `AWS_GENERIC`,
                                                  `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`,
                                                  `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE`
                                                  and `KUBERNETES`
                                                type: string
                                              key:
                                                description: The key of the tag. For
                                                  custom tags, put the tag value here.
                                                  The key allows categorization of
                                                  multiple tags. It is possible that
                                                  there are multiple values for a
                                                  single key which will all be represented
                                                  as standalone tags. Therefore, the
                                                  key does not have the semantic of
                                                  a map key but is more like a key
                                                  of a key-value tuple. In some cases,
                                                  for example custom tags, the key
                                                  represents the actual tag value
                                                  and the value field is not set –
                                                  those are called valueless tags
                                                type: string
                                              tagKey:
                                                description: has no documentation
                                                properties:
                                                  context:
                                                    description: has no documentation
                                                    type: string
                                                  key:
                                                    description: has no documentation
                                                    type: string
                                                type: object
                                              value:
                                                description: The value of the tag.
                                                  Not applicable to custom tags. If
                                                  a tag does have a separate key and
                                                  value (in the textual representation
                                                  they are split by the colon ‘:’),
                                                  this field is set with the actual
                                                  value. Key-value pairs can occur
                                                  for automatically imported tags
                                                  and tags set by rules if extractors
                                                  are used
                                                type: string
                                            required:
                                            - key
                                            type: object
                                          unknowns:
                                            description: allows for configuring properties
                                              that are not explicitly supported by
                                              the current version of this provider
                                            type: string
                                        type: object
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to
                                        type: string
                                      values:
                                        description: The values to compare to
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    required:
                                    - requestAttribute
                                    type: object
                                  tag:
                                    description: Comparison for `TAG` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`,
                                          `TAG_KEY_EQUALS` and `TAG_KEY_EQUALS_ANY_OF`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The values to compare to
                                        properties:
                                          context:
                                            description: The origin of the tag, such
                                              as AWS or Cloud Foundry. Custom tags
                                              use the `CONTEXTLESS` value. Possible
                                              values are `AWS`, `AWS_GENERIC`, `AZURE`,
                                              `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`,
                                              `GOOGLE_CLOUD` and `KUBERNETES`
                                            type: string
                                          key:
                                            description: The key of the tag. Custom
                                              tags have the tag value here
                                            type: string
                                          unknowns:
                                            description: allows for configuring properties
                                              that are not explicitly supported by
                                              the current version of this provider
                                            type: string
                                          value:
                                            description: The value of the tag. Not
                                              applicable to custom tags
                                            type: string
                                        required:
                                        - context
                                        - key
                                        type: object
                                      values:
                                        description: The values to compare to
                                        properties:
                                          value:
                                            description: The values to compare to
                                            items:
                                              properties:
                                                context:
                                                  description: The origin of the tag,
                                                    such as AWS or Cloud Foundry.
                                                    Custom tags use the `CONTEXTLESS`
                                                    value. Possible values are `AWS`,
                                                    `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`,
                                                    `CONTEXTLESS`, `ENVIRONMENT`,
                                                    `GOOGLE_CLOUD` and `KUBERNETES`
                                                  type: string
                                                key:
                                                  description: The key of the tag.
                                                    Custom tags have the tag value
                                                    here
                                                  type: string
                                                unknowns:
                                                  description: allows for configuring
                                                    properties that are not explicitly
                                                    supported by the current version
                                                    of this provider
                                                  type: string
                                                value:
                                                  description: The value of the tag.
                                                    Not applicable to custom tags
                                                  type: string
                                              required:
                                              - context
                                              - key
                                              type: object
                                            minItems: 1
                                            type: array
                                        type: object
                                    type: object
                                  zosCallType:
                                    description: Comparison for `ZOS_CALL_TYPE` attributes
                                    properties:
                                      operator:
                                        description: Operator of the comparison. You
                                          can reverse it by setting `negate` to `true`.
                                          Possible values are `EQUALS`, `EQUALS_ANY_OF`
                                          and `EXISTS`
                                        type: string
                                      unknowns:
                                        description: allows for configuring properties
                                          that are not explicitly supported by the
                                          current version of this provider
                                        type: string
                                      value:
                                        description: The value to compare to. Possible
                                          values are `CTG`, `DPL`, `EXPLICIT_ADK`,
                                          `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`,
                                          `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`,
                                          `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`,
                                          `TX` and `UNKNOWN`
                                        type: string
                                      values:
                                        description: The values to compare to. Possible
                                          values are `CTG`, `DPL`, `EXPLICIT_ADK`,
                                          `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`,
                                          `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`,
                                          `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`,
                                          `TX` and `UNKNOWN`
                                        items:
                                          type: string
                                        minItems: 1
                                        type: array
                                    type: object
                                type: object
                            required:
                            - attribute
                            - comparison
                            type: object
                          minItems: 1
                          type: array
                      type: object
                    minItems: 1
                    type: array
                  dimensionDefinition:
                    description: Parameters of a definition of a calculated service
                      metric
                    properties:
                      dimension:
                        description: The dimension value pattern. You can define custom
                          placeholders in the `placeholders` field and use them here
                        type: string
                      name:
                        description: The name of the dimension
                        type: string
                      placeholders:
                        description: The list of custom placeholders to be used in
                          a dimension value pattern
                        properties:
                          placeholder:
                            description: A custom placeholder to be used in a dimension
                              value pattern
                            items:
                              properties:
                                aggregation:
                                  description: Which value of the request attribute
                                    must be used when it occurs across multiple child
                                    requests. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE`
                                    attribute, when **useFromChildCalls** is `true`.
                                    For the `COUNT` aggregation, the **kind** field
                                    is not applicable. Possible values are `COUNT`,
                                    `FIRST` and `LAST`.
                                  type: string
                                attribute:
                                  description: The attribute to extract from. You
                                    can only use attributes of the **string** type.
                                    Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`,
                                    `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`,
                                    `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`,
                                    `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`,
                                    `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`,
                                    `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`,
                                    `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`,
                                    `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`,
                                    `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`,
                                    `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`,
                                    `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`,
                                    `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`,
                                    `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`,
                                    `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`,
                                    `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`,
                                    `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`,
                                    `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`,
                                    `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`,
                                    `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`,
                                    `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`,
                                    `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`,
                                    `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`,
                                    `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`,
                                    `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`,
                                    `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`,
                                    `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`,
                                    `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`,
                                    `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`,
                                    `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`,
                                    `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`,
                                    `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`,
                                    `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`,
                                    `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`,
                                    `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and
                                    `ZOS_CALL_TYPE`
                                  type: string
                                delimiterOrRegex:
                                  description: "Depending on the `kind` value: \n
                                    * `REGEX_EXTRACTION`: The regular expression.
                                    \n * `BETWEEN_DELIMITER`: The opening delimiter
                                    string to look for. \n * All other values: The
                                    delimiter string to look for"
                                  type: string
                                endDelimiter:
                                  description: The closing delimiter string to look
                                    for. Required if the `kind` value is `BETWEEN_DELIMITER`.
                                    Not applicable otherwise
                                  type: string
                                kind:
                                  description: "The type of extraction. Defines either
                                    usage of regular expression (`regex`) or the position
                                    of request attribute value to be extracted. When
                                    the `attribute` is `SERVICE_REQUEST_ATTRIBUTE`
                                    attribute and `aggregation` is `COUNT`, needs
                                    to be set to `ORIGINAL_TEXT`. Possible values
                                    are \t`AFTER_DELIMITER`, `BEFORE_DELIMITER`, `BETWEEN_DELIMITER`,
                                    `ORIGINAL_TEXT` and `REGEX_EXTRACTION`"
                                  type: string
                                name:
                                  description: The name of the placeholder. Use it
                                    in the naming pattern as `{name}`
                                  type: string
                                normalization:
                                  description: The format of the extracted string.
                                    Possible values are `ORIGINAL`, `TO_LOWER_CASE`
                                    and `TO_UPPER_CASE`
                                  type: string
                                requestAttribute:
                                  description: The request attribute to extract from.
                                    Required if the `kind` value is `SERVICE_REQUEST_ATTRIBUTE`.
                                    Not applicable otherwise
                                  type: string
                                source:
                                  description: Defines valid sources of request attributes
                                    for conditions or placeholders
                                  properties:
                                    managementZone:
                                      description: Use only request attributes from
                                        services that belong to this management zone..
                                        Use either this or `serviceTag`
                                      type: string
                                    serviceTag:
                                      description: Use only request attributes from
                                        services that have this tag. Use either this
                                        or `managementZone`
                                      properties:
                                        context:
                                          description: The origin of the tag, such
                                            as AWS or Cloud Foundry. For custom tags
                                            use the `CONTEXTLESS` value. The context
                                            is set for tags that are automatically
                                            imported by OneAgent (for example, from
                                            the AWS console or environment variables).
                                            It’s useful for determining the origin
                                            of tags when not manually defined, and
                                            it also helps to prevent clashes with
                                            other existing tags. If the tag is not
                                            automatically imported, `CONTEXTLESS`
                                            set. Possible values are `AWS`, `AWS_GENERIC`,
                                            `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`,
                                            `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE`
                                            and `KUBERNETES`
                                          type: string
                                        key:
                                          description: The key of the tag. For custom
                                            tags, put the tag value here. The key
                                            allows categorization of multiple tags.
                                            It is possible that there are multiple
                                            values for a single key which will all
                                            be represented as standalone tags. Therefore,
                                            the key does not have the semantic of
                                            a map key but is more like a key of a
                                            key-value tuple. In some cases, for example
                                            custom tags, the key represents the actual
                                            tag value and the value field is not set
                                            – those are called valueless tags
                                          type: string
                                        tagKey:
                                          description: has no documentation
                                          properties:
                                            context:
                                              description: has no documentation
                                              type: string
                                            key:
                                              description: has no documentation
                                              type: string
                                          type: object
                                        value:
                                          description: The value of the tag. Not applicable
                                            to custom tags. If a tag does have a separate
                                            key and value (in the textual representation
                                            they are split by the colon ‘:’), this
                                            field is set with the actual value. Key-value
                                            pairs can occur for automatically imported
                                            tags and tags set by rules if extractors
                                            are used
                                          type: string
                                      required:
                                      - key
                                      type: object
                                    unknowns:
                                      description: allows for configuring properties
                                        that are not explicitly supported by the current
                                        version of this provider
                                      type: string
                                  type: object
                                unknowns:
                                  description: allows for configuring properties that
                                    are not explicitly supported by the current version
                                    of this provider
                                  type: string
                                useFromChildCalls:
                                  description: If `true` request attribute will be
                                    taken from a child service call. Only applicable
                                    for the `SERVICE_REQUEST_ATTRIBUTE` attribute.
                                    Defaults to `false`
                                  type: boolean
                              required:
                              - attribute
                              - kind
                              - name
                              type: object
                            minItems: 1
                            type: array
                        type: object
                      topX:
                        description: The number of top values to be calculated
                        format: int64
                        type: integer
                      topXAggregation:
                        description: The aggregation of the dimension. Possible values
                          are `AVERAGE`, `COUNT`, `MAX`, `MIN`, `OF_INTEREST_RATIO`,
                          `OTHER_RATIO`, `SINGLE_VALUE` and `SUM`
                        type: string
                      topXDirection:
                        description: How to calculate the **topX** values. Possible
                          values are `ASCENDING` and `DESCENDING`
                        type: string
                      unknowns:
                        description: allows for configuring properties that are not
                          explicitly supported by the current version of this provider
                        type: string
                    required:
                    - dimension
                    - name
                    - topX
                    - topXAggregation
                    - topXDirection
                    type: object
                  enabled:
                    description: The metric is enabled (`true`) or disabled (`false`)
                    type: boolean
                  entityID:
                    description: Restricts the metric usage to the specified service.
                      This field is mutually exclusive with the `management_zones`
                      field
                    type: string
                  id:
                    type: string
                  managementZones:
                    description: Restricts the metric usage to specified management
                      zones. This field is mutually exclusive with the `entity_id`
                      field
                    items:
                      type: string
                    type: array
                  metricDefinition:
                    description: The definition of a calculated service metric
                    properties:
                      metric:
                        description: The metric to be captured. Possible values are
                          `CPU_TIME`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`,
                          `DISK_IO_TIME`, `EXCEPTION_COUNT`, `FAILED_REQUEST_COUNT`,
                          `FAILED_REQUEST_COUNT_CLIENT`, `FAILURE_RATE`, `FAILURE_RATE_CLIENT`,
                          `HTTP_4XX_ERROR_COUNT`, `HTTP_4XX_ERROR_COUNT_CLIENT`, `HTTP_5XX_ERROR_COUNT`,
                          `HTTP_5XX_ERROR_COUNT_CLIENT`, `IO_TIME`, `LOCK_TIME`, `NETWORK_IO_TIME`,
                          `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`,
                          `PROCESSING_TIME`, `REQUEST_ATTRIBUTE`, `REQUEST_COUNT`,
                          `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `SUCCESSFUL_REQUEST_COUNT`,
                          `SUCCESSFUL_REQUEST_COUNT_CLIENT` and `WAIT_TIME`
                        type: string
                      requestAttribute:
                        description: The request attribute to be captured. Only applicable
                          when the **metric** parameter is set to `REQUEST_ATTRIBUTE`
                        type: string
                    required:
                    - metric
                    type: object
                  metricKey:
                    description: The key of the calculated service metric
                    type: string
                  name:
                    description: The displayed name of the metric
                    type: string
                  unit:
                    description: The unit of the metric. Possible values are `BIT`,
                      `BIT_PER_HOUR`, `BIT_PER_MINUTE`, `BIT_PER_SECOND`, `BYTE`,
                      `BYTE_PER_HOUR`, `BYTE_PER_MINUTE`, `BYTE_PER_SECOND`, `CORES`,
                      `COUNT`, `DAY`, `DECIBEL_MILLI_WATT`, `GIBI_BYTE`, `GIGA`, `GIGA_BYTE`,
                      `HOUR`, `KIBI_BYTE`, `KIBI_BYTE_PER_HOUR`, `KIBI_BYTE_PER_MINUTE`,
                      `KIBI_BYTE_PER_SECOND`, `KILO`, `KILO_BYTE`, `KILO_BYTE_PER_HOUR`,
                      `KILO_BYTE_PER_MINUTE`, `KILO_BYTE_PER_SECOND`, `MEBI_BYTE`,
                      `MEBI_BYTE_PER_HOUR`, `MEBI_BYTE_PER_MINUTE`, `MEBI_BYTE_PER_SECOND`,
                      `MEGA`, `MEGA_BYTE`, `MEGA_BYTE_PER_HOUR`, `MEGA_BYTE_PER_MINUTE`,
                      `MEGA_BYTE_PER_SECOND`, `MICRO_SECOND`, `MILLI_CORES`, `MILLI_SECOND`,
                      `MILLI_SECOND_PER_MINUTE`, `MINUTE`, `MONTH`, `MSU`, `NANO_SECOND`,
                      `NANO_SECOND_PER_MINUTE`, `NOT_APPLICABLE`, `PERCENT`, `PER_HOUR`,
                      `PER_MINUTE`, `PER_SECOND`, `PIXEL`, `PROMILLE`, `RATIO`, `SECOND`,
                      `STATE`, `UNSPECIFIED`, `WEEK` and `YEAR`
                    type: string
                  unitDisplayName:
                    description: The display name of the metric's unit. Only applicable
                      when the **unit** parameter is set to `UNSPECIFIED`
                    type: string
                  unknowns:
                    description: allows for configuring properties that are not explicitly
                      supported by the current version of this provider
                    type: string
                required:
                - metricKey
                - name
                - unit
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
