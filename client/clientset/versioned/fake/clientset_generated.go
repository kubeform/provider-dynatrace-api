/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	clientset "kubeform.dev/provider-dynatrace-api/client/clientset/versioned"
	alertingv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/alerting/v1alpha1"
	fakealertingv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/alerting/v1alpha1/fake"
	applicationv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/application/v1alpha1"
	fakeapplicationv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/application/v1alpha1/fake"
	autotagv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/autotag/v1alpha1"
	fakeautotagv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/autotag/v1alpha1/fake"
	awsv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/aws/v1alpha1"
	fakeawsv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/aws/v1alpha1/fake"
	azurev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/azure/v1alpha1"
	fakeazurev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/azure/v1alpha1/fake"
	browserv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/browser/v1alpha1"
	fakebrowserv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/browser/v1alpha1/fake"
	calculatedv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/calculated/v1alpha1"
	fakecalculatedv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/calculated/v1alpha1/fake"
	customv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/custom/v1alpha1"
	fakecustomv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/custom/v1alpha1/fake"
	dashboardv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/dashboard/v1alpha1"
	fakedashboardv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/dashboard/v1alpha1/fake"
	databasev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/database/v1alpha1"
	fakedatabasev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/database/v1alpha1/fake"
	diskv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/disk/v1alpha1"
	fakediskv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/disk/v1alpha1/fake"
	environmentv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/environment/v1alpha1"
	fakeenvironmentv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/environment/v1alpha1/fake"
	hostv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/host/v1alpha1"
	fakehostv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/host/v1alpha1/fake"
	httpv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/http/v1alpha1"
	fakehttpv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/http/v1alpha1/fake"
	k8sv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/k8s/v1alpha1"
	fakek8sv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/k8s/v1alpha1/fake"
	maintenancev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/maintenance/v1alpha1"
	fakemaintenancev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/maintenance/v1alpha1/fake"
	managementv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/management/v1alpha1"
	fakemanagementv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/management/v1alpha1/fake"
	mobilev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/mobile/v1alpha1"
	fakemobilev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/mobile/v1alpha1/fake"
	notificationv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/notification/v1alpha1"
	fakenotificationv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/notification/v1alpha1/fake"
	processgroupv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/processgroup/v1alpha1"
	fakeprocessgroupv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/processgroup/v1alpha1/fake"
	requestv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/request/v1alpha1"
	fakerequestv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/request/v1alpha1/fake"
	resourcev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/resource/v1alpha1"
	fakeresourcev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/resource/v1alpha1/fake"
	servicev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/service/v1alpha1"
	fakeservicev1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/service/v1alpha1/fake"
	slov1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/slo/v1alpha1"
	fakeslov1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/slo/v1alpha1/fake"
	spanv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/span/v1alpha1"
	fakespanv1alpha1 "kubeform.dev/provider-dynatrace-api/client/clientset/versioned/typed/span/v1alpha1/fake"

	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/watch"
	"k8s.io/client-go/discovery"
	fakediscovery "k8s.io/client-go/discovery/fake"
	"k8s.io/client-go/testing"
)

// NewSimpleClientset returns a clientset that will respond with the provided objects.
// It's backed by a very simple object tracker that processes creates, updates and deletions as-is,
// without applying any validations and/or defaults. It shouldn't be considered a replacement
// for a real clientset and is mostly useful in simple unit tests.
func NewSimpleClientset(objects ...runtime.Object) *Clientset {
	o := testing.NewObjectTracker(scheme, codecs.UniversalDecoder())
	for _, obj := range objects {
		if err := o.Add(obj); err != nil {
			panic(err)
		}
	}

	cs := &Clientset{tracker: o}
	cs.discovery = &fakediscovery.FakeDiscovery{Fake: &cs.Fake}
	cs.AddReactor("*", "*", testing.ObjectReaction(o))
	cs.AddWatchReactor("*", func(action testing.Action) (handled bool, ret watch.Interface, err error) {
		gvr := action.GetResource()
		ns := action.GetNamespace()
		watch, err := o.Watch(gvr, ns)
		if err != nil {
			return false, nil, err
		}
		return true, watch, nil
	})

	return cs
}

// Clientset implements clientset.Interface. Meant to be embedded into a
// struct to get a default implementation. This makes faking out just the method
// you want to test easier.
type Clientset struct {
	testing.Fake
	discovery *fakediscovery.FakeDiscovery
	tracker   testing.ObjectTracker
}

func (c *Clientset) Discovery() discovery.DiscoveryInterface {
	return c.discovery
}

func (c *Clientset) Tracker() testing.ObjectTracker {
	return c.tracker
}

var _ clientset.Interface = &Clientset{}

// AlertingV1alpha1 retrieves the AlertingV1alpha1Client
func (c *Clientset) AlertingV1alpha1() alertingv1alpha1.AlertingV1alpha1Interface {
	return &fakealertingv1alpha1.FakeAlertingV1alpha1{Fake: &c.Fake}
}

// ApplicationV1alpha1 retrieves the ApplicationV1alpha1Client
func (c *Clientset) ApplicationV1alpha1() applicationv1alpha1.ApplicationV1alpha1Interface {
	return &fakeapplicationv1alpha1.FakeApplicationV1alpha1{Fake: &c.Fake}
}

// AutotagV1alpha1 retrieves the AutotagV1alpha1Client
func (c *Clientset) AutotagV1alpha1() autotagv1alpha1.AutotagV1alpha1Interface {
	return &fakeautotagv1alpha1.FakeAutotagV1alpha1{Fake: &c.Fake}
}

// AwsV1alpha1 retrieves the AwsV1alpha1Client
func (c *Clientset) AwsV1alpha1() awsv1alpha1.AwsV1alpha1Interface {
	return &fakeawsv1alpha1.FakeAwsV1alpha1{Fake: &c.Fake}
}

// AzureV1alpha1 retrieves the AzureV1alpha1Client
func (c *Clientset) AzureV1alpha1() azurev1alpha1.AzureV1alpha1Interface {
	return &fakeazurev1alpha1.FakeAzureV1alpha1{Fake: &c.Fake}
}

// BrowserV1alpha1 retrieves the BrowserV1alpha1Client
func (c *Clientset) BrowserV1alpha1() browserv1alpha1.BrowserV1alpha1Interface {
	return &fakebrowserv1alpha1.FakeBrowserV1alpha1{Fake: &c.Fake}
}

// CalculatedV1alpha1 retrieves the CalculatedV1alpha1Client
func (c *Clientset) CalculatedV1alpha1() calculatedv1alpha1.CalculatedV1alpha1Interface {
	return &fakecalculatedv1alpha1.FakeCalculatedV1alpha1{Fake: &c.Fake}
}

// CustomV1alpha1 retrieves the CustomV1alpha1Client
func (c *Clientset) CustomV1alpha1() customv1alpha1.CustomV1alpha1Interface {
	return &fakecustomv1alpha1.FakeCustomV1alpha1{Fake: &c.Fake}
}

// DashboardV1alpha1 retrieves the DashboardV1alpha1Client
func (c *Clientset) DashboardV1alpha1() dashboardv1alpha1.DashboardV1alpha1Interface {
	return &fakedashboardv1alpha1.FakeDashboardV1alpha1{Fake: &c.Fake}
}

// DatabaseV1alpha1 retrieves the DatabaseV1alpha1Client
func (c *Clientset) DatabaseV1alpha1() databasev1alpha1.DatabaseV1alpha1Interface {
	return &fakedatabasev1alpha1.FakeDatabaseV1alpha1{Fake: &c.Fake}
}

// DiskV1alpha1 retrieves the DiskV1alpha1Client
func (c *Clientset) DiskV1alpha1() diskv1alpha1.DiskV1alpha1Interface {
	return &fakediskv1alpha1.FakeDiskV1alpha1{Fake: &c.Fake}
}

// EnvironmentV1alpha1 retrieves the EnvironmentV1alpha1Client
func (c *Clientset) EnvironmentV1alpha1() environmentv1alpha1.EnvironmentV1alpha1Interface {
	return &fakeenvironmentv1alpha1.FakeEnvironmentV1alpha1{Fake: &c.Fake}
}

// HostV1alpha1 retrieves the HostV1alpha1Client
func (c *Clientset) HostV1alpha1() hostv1alpha1.HostV1alpha1Interface {
	return &fakehostv1alpha1.FakeHostV1alpha1{Fake: &c.Fake}
}

// HttpV1alpha1 retrieves the HttpV1alpha1Client
func (c *Clientset) HttpV1alpha1() httpv1alpha1.HttpV1alpha1Interface {
	return &fakehttpv1alpha1.FakeHttpV1alpha1{Fake: &c.Fake}
}

// K8sV1alpha1 retrieves the K8sV1alpha1Client
func (c *Clientset) K8sV1alpha1() k8sv1alpha1.K8sV1alpha1Interface {
	return &fakek8sv1alpha1.FakeK8sV1alpha1{Fake: &c.Fake}
}

// MaintenanceV1alpha1 retrieves the MaintenanceV1alpha1Client
func (c *Clientset) MaintenanceV1alpha1() maintenancev1alpha1.MaintenanceV1alpha1Interface {
	return &fakemaintenancev1alpha1.FakeMaintenanceV1alpha1{Fake: &c.Fake}
}

// ManagementV1alpha1 retrieves the ManagementV1alpha1Client
func (c *Clientset) ManagementV1alpha1() managementv1alpha1.ManagementV1alpha1Interface {
	return &fakemanagementv1alpha1.FakeManagementV1alpha1{Fake: &c.Fake}
}

// MobileV1alpha1 retrieves the MobileV1alpha1Client
func (c *Clientset) MobileV1alpha1() mobilev1alpha1.MobileV1alpha1Interface {
	return &fakemobilev1alpha1.FakeMobileV1alpha1{Fake: &c.Fake}
}

// NotificationV1alpha1 retrieves the NotificationV1alpha1Client
func (c *Clientset) NotificationV1alpha1() notificationv1alpha1.NotificationV1alpha1Interface {
	return &fakenotificationv1alpha1.FakeNotificationV1alpha1{Fake: &c.Fake}
}

// ProcessgroupV1alpha1 retrieves the ProcessgroupV1alpha1Client
func (c *Clientset) ProcessgroupV1alpha1() processgroupv1alpha1.ProcessgroupV1alpha1Interface {
	return &fakeprocessgroupv1alpha1.FakeProcessgroupV1alpha1{Fake: &c.Fake}
}

// RequestV1alpha1 retrieves the RequestV1alpha1Client
func (c *Clientset) RequestV1alpha1() requestv1alpha1.RequestV1alpha1Interface {
	return &fakerequestv1alpha1.FakeRequestV1alpha1{Fake: &c.Fake}
}

// ResourceV1alpha1 retrieves the ResourceV1alpha1Client
func (c *Clientset) ResourceV1alpha1() resourcev1alpha1.ResourceV1alpha1Interface {
	return &fakeresourcev1alpha1.FakeResourceV1alpha1{Fake: &c.Fake}
}

// ServiceV1alpha1 retrieves the ServiceV1alpha1Client
func (c *Clientset) ServiceV1alpha1() servicev1alpha1.ServiceV1alpha1Interface {
	return &fakeservicev1alpha1.FakeServiceV1alpha1{Fake: &c.Fake}
}

// SloV1alpha1 retrieves the SloV1alpha1Client
func (c *Clientset) SloV1alpha1() slov1alpha1.SloV1alpha1Interface {
	return &fakeslov1alpha1.FakeSloV1alpha1{Fake: &c.Fake}
}

// SpanV1alpha1 retrieves the SpanV1alpha1Client
func (c *Clientset) SpanV1alpha1() spanv1alpha1.SpanV1alpha1Interface {
	return &fakespanv1alpha1.FakeSpanV1alpha1{Fake: &c.Fake}
}
