/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-dynatrace-api/apis/calculated/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceMetricLister helps list ServiceMetrics.
// All objects returned here must be treated as read-only.
type ServiceMetricLister interface {
	// List lists all ServiceMetrics in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceMetric, err error)
	// ServiceMetrics returns an object that can list and get ServiceMetrics.
	ServiceMetrics(namespace string) ServiceMetricNamespaceLister
	ServiceMetricListerExpansion
}

// serviceMetricLister implements the ServiceMetricLister interface.
type serviceMetricLister struct {
	indexer cache.Indexer
}

// NewServiceMetricLister returns a new ServiceMetricLister.
func NewServiceMetricLister(indexer cache.Indexer) ServiceMetricLister {
	return &serviceMetricLister{indexer: indexer}
}

// List lists all ServiceMetrics in the indexer.
func (s *serviceMetricLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceMetric, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceMetric))
	})
	return ret, err
}

// ServiceMetrics returns an object that can list and get ServiceMetrics.
func (s *serviceMetricLister) ServiceMetrics(namespace string) ServiceMetricNamespaceLister {
	return serviceMetricNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceMetricNamespaceLister helps list and get ServiceMetrics.
// All objects returned here must be treated as read-only.
type ServiceMetricNamespaceLister interface {
	// List lists all ServiceMetrics in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceMetric, err error)
	// Get retrieves the ServiceMetric from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServiceMetric, error)
	ServiceMetricNamespaceListerExpansion
}

// serviceMetricNamespaceLister implements the ServiceMetricNamespaceLister
// interface.
type serviceMetricNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceMetrics in the indexer for a given namespace.
func (s serviceMetricNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceMetric, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceMetric))
	})
	return ret, err
}

// Get retrieves the ServiceMetric from the indexer for a given namespace and name.
func (s serviceMetricNamespaceLister) Get(name string) (*v1alpha1.ServiceMetric, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("servicemetric"), name)
	}
	return obj.(*v1alpha1.ServiceMetric), nil
}
