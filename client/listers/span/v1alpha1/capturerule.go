/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-dynatrace-api/apis/span/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CaptureRuleLister helps list CaptureRules.
// All objects returned here must be treated as read-only.
type CaptureRuleLister interface {
	// List lists all CaptureRules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CaptureRule, err error)
	// CaptureRules returns an object that can list and get CaptureRules.
	CaptureRules(namespace string) CaptureRuleNamespaceLister
	CaptureRuleListerExpansion
}

// captureRuleLister implements the CaptureRuleLister interface.
type captureRuleLister struct {
	indexer cache.Indexer
}

// NewCaptureRuleLister returns a new CaptureRuleLister.
func NewCaptureRuleLister(indexer cache.Indexer) CaptureRuleLister {
	return &captureRuleLister{indexer: indexer}
}

// List lists all CaptureRules in the indexer.
func (s *captureRuleLister) List(selector labels.Selector) (ret []*v1alpha1.CaptureRule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CaptureRule))
	})
	return ret, err
}

// CaptureRules returns an object that can list and get CaptureRules.
func (s *captureRuleLister) CaptureRules(namespace string) CaptureRuleNamespaceLister {
	return captureRuleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CaptureRuleNamespaceLister helps list and get CaptureRules.
// All objects returned here must be treated as read-only.
type CaptureRuleNamespaceLister interface {
	// List lists all CaptureRules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CaptureRule, err error)
	// Get retrieves the CaptureRule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CaptureRule, error)
	CaptureRuleNamespaceListerExpansion
}

// captureRuleNamespaceLister implements the CaptureRuleNamespaceLister
// interface.
type captureRuleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CaptureRules in the indexer for a given namespace.
func (s captureRuleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CaptureRule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CaptureRule))
	})
	return ret, err
}

// Get retrieves the CaptureRule from the indexer for a given namespace and name.
func (s captureRuleNamespaceLister) Get(name string) (*v1alpha1.CaptureRule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("capturerule"), name)
	}
	return obj.(*v1alpha1.CaptureRule), nil
}
